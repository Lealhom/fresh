<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.manager.domain.business.ProductMapper">
	<insert id="insert" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
		insert into t_product
		(name,status,createTime,updateTime,mainImgUuid,brandId,bornPlace, description)
		values
		(#{name},#{status},#{createTime},#{updateTime},#{mainImgUuid},#{brandId},#{bornPlace},#{description})
	</insert>
	<insert id="addCategoryId">
		insert into t_category_product 
		(productId,categoryId)
		values
		(#{productId},#{categoryId})
	</insert>
	<delete id="delCategoryIds">
		delete from t_category_product
		where productId = #{productId}
	</delete>
	<delete id="delViceImgUuids">
		delete from t_product_file
		where productId = #{productId}
	</delete>
	<insert id="addViceImgUuid">
		insert into t_product_file 
		(productId,imgUuid,orderNum,type)
		values
		(#{productId},#{viceImgUuid},#{orderNum},1)
	</insert>
	<insert id="addCollection">
		insert into t_collection 
		(customerId,productId)
		values
		(#{customerId},#{productId})
	</insert>
	<insert id="delCollection">
		delete from t_collection 
		where customerId = #{customerId} and productId = #{productId}
	</insert>
	<update id="update" parameterType="Product">
		update t_product
		<set>
			<if test="name!=null">name=#{name},</if>
			<if test="status!=0">status=#{status},</if>
			<if test="updateTime!=null">updateTime=#{updateTime},</if>
			<if test="brandId!=0">brandId=#{brandId},</if>
			<if test="bornPlace!=null">bornPlace=#{bornPlace},</if>
			<if test="mainImgUuid!=null">mainImgUuid=#{mainImgUuid},</if>
			<if test="description!=null">description=#{description}</if>
		</set>
		where id = #{id}
	</update>
	<update id="setHot">
		update t_product 
		set hot = 1
		where id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>
	</update>
	<update id="cancelHot">
		update t_product 
		set hot = 0
		where id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>
	</update>
	<delete id="deleteById" parameterType="int">
		delete from t_product where id=#{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from t_product where id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>
	</delete>
	<select id="findViceImgs" resultType="string">
		select imgUuid from t_product_file where type = 1 and productId = #{productId} order by orderNum
	</select>
	<select id="detail" resultType="map">
		SELECT 
			t1.id skuId,t1.status skuStatus,t1.name skuName,t1.originalPrice,t1.discountPrice,t1.standard,t1.quantity,
			t2.id productId,t2.status productStatus,t2.name productName,t2.description,t2.bornPlace,t2.hot,t2.mainImgUuid
		FROM fresh.t_sku t1 
		left join t_product t2
		on t1.productId = t2.id
		where t1.productId = #{productId} and t1.id = #{skuId}
	</select>
	<select id="search" resultType="map">
		SELECT 
			t1.id skuId,t1.status skuStatus,t1.name skuName,t1.originalPrice,t1.discountPrice,t1.standard,t1.quantity,
			t2.id productId,t2.status productStatus,t2.name productName,t2.description,t2.bornPlace,t2.hot,t2.mainImgUuid 
		FROM fresh.t_sku t1 
		left join t_product t2
		on t1.productId = t2.id
		where t2.name like CONCAT('%',#{name},'%')
	</select>
	<select id="listHotProduct" resultType="map">
		SELECT 
			t1.id skuId,t1.status skuStatus,t1.name skuName,t1.originalPrice,t1.discountPrice,t1.standard,t1.quantity,
			t2.id productId,t2.status productStatus,t2.name productName,t2.description,t2.bornPlace,t2.hot,t2.mainImgUuid
		FROM fresh.t_sku t1 
		left join t_product t2
		on t1.productId = t2.id
		where t2.hot = 1
	</select>
	<select id="listByActivityId" resultType="map">
		SELECT 
			t1.id skuId,t1.status skuStatus,t1.name skuName,t1.originalPrice,t1.discountPrice,t1.standard,t1.quantity,
			t2.id productId,t2.status productStatus,t2.name productName,t2.description,t2.bornPlace,t2.hot,t2.mainImgUuid 
		FROM fresh.t_sku t1 
		left join t_product t2 on t1.productId = t2.id
		left join t_activity_product t3 on t2.id = t3.productId
		where t3.activityId = #{activityId}
	</select>
	<select id="listByCategoryId" resultType="map">
		SELECT 
			t1.id skuId,t1.status skuStatus,t1.name skuName,t1.originalPrice,t1.discountPrice,t1.standard,t1.quantity,
			t2.id productId,t2.status productStatus,t2.name productName,t2.description,t2.bornPlace,t2.hot,t2.mainImgUuid
		FROM fresh.t_sku t1 
		left join t_product t2 on t1.productId = t2.id
		left join t_category_product t3 on t2.id = t3.productId
		where t3.categoryId = #{categoryId}
	</select>
	<select id="selectById" resultType="Product">
		select t1.id,t1.name,t1.description,t1.status,t1.createTime,t1.updateTime,t1.bornPlace,t1.mainImgUuid,
			   t3.name	brandName,t3.id brandId,group_concat(t5.id) categoryNames
		from t_product t1 
		left join t_brand t3 on t1.brandId = t3.id
		left join t_category_product t4 on t1.id = t4.productId
		left join t_category t5 on t4.categoryId = t5.id
		where t1.id = #{id}
		group by t1.id 
	</select>
	<select id="listCollection" resultType="map">
		select t1.id,t1.name,t1.description,t3.name brandName 
		from t_product t1
		left join t_collection t2 on t1.id = t2.productId
		left join t_brand t3 on t1.brandId = t3.id
		where t2.customerId = #{customerId}
	</select>
	<sql id="gridWhere">
		from t_product u
		<where>
		</where>
	</sql>
	<select id="listPaged" resultType="Product">
		select t1.id,t1.name,t1.description,t1.status,t1.hot,t1.createTime,t1.updateTime,t1.bornPlace,t1.mainImgUuid,
			   t3.name	brandName,group_concat(t5.name) categoryNames
		from t_product t1 
		left join t_brand t3 on t1.brandId = t3.id
		left join t_category_product t4 on t1.id = t4.productId
		left join t_category t5 on t4.categoryId = t5.id
		group by t1.id
		<if test="rows > 0">
		limit #{start},#{rows}
		</if>
	</select>
	<select id="count" resultType="long">
		select count(*)
		<include refid="gridWhere"/>
	</select>
</mapper>